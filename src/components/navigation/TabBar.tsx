import { BottomTabBarProps } from '@react-navigation/bottom-tabs';
import { fonts, outline } from '@utils';
import React from 'react';
import { Platform, StyleSheet, TouchableOpacity, View } from 'react-native';
import { useSafeAreaInsets } from 'react-native-safe-area-context';
import { Path, Svg } from 'react-native-svg';

const TabBar = ({ state, descriptors, navigation }: BottomTabBarProps) => {
  const insets = useSafeAreaInsets();
  return (
    <View style={[styles.tabBg, { paddingBottom: (insets.bottom + (Platform.OS === 'ios' ? 0 : 15)) }]}>
      {state.routes.map((route, idx) => {
        const { options } = descriptors[route.key];
        const label = route.name;
        let iconPathD = "M27.3538 12.9713L17.3538 3.53632C17.3489 3.53206 17.3443 3.52746 17.34 3.52257C16.9718 3.18774 16.492 3.0022 15.9944 3.0022C15.4967 3.0022 15.0169 3.18774 14.6488 3.52257L14.635 3.53632L4.64625 12.9713C4.4425 13.1587 4.27985 13.3863 4.16861 13.6398C4.05737 13.8932 3.99996 14.167 4 14.4438V26.0001C4 26.5305 4.21071 27.0392 4.58579 27.4143C4.96086 27.7894 5.46957 28.0001 6 28.0001H12C12.5304 28.0001 13.0391 27.7894 13.4142 27.4143C13.7893 27.0392 14 26.5305 14 26.0001V20.0001H18V26.0001C18 26.5305 18.2107 27.0392 18.5858 27.4143C18.9609 27.7894 19.4696 28.0001 20 28.0001H26C26.5304 28.0001 27.0391 27.7894 27.4142 27.4143C27.7893 27.0392 28 26.5305 28 26.0001V14.4438C28 14.167 27.9426 13.8932 27.8314 13.6398C27.7201 13.3863 27.5575 13.1587 27.3538 12.9713ZM26 26.0001H20V20.0001C20 19.4696 19.7893 18.9609 19.4142 18.5859C19.0391 18.2108 18.5304 18.0001 18 18.0001H14C13.4696 18.0001 12.9609 18.2108 12.5858 18.5859C12.2107 18.9609 12 19.4696 12 20.0001V26.0001H6V14.4438L6.01375 14.4313L16 5.00007L25.9875 14.4288L26.0012 14.4413L26 26.0001Z";
        let [w, h] = ["32", "32"];
        if (label === 'Home') {
          iconPathD = "M27.3538 12.9713L17.3538 3.53632C17.3489 3.53206 17.3443 3.52746 17.34 3.52257C16.9718 3.18774 16.492 3.0022 15.9944 3.0022C15.4967 3.0022 15.0169 3.18774 14.6488 3.52257L14.635 3.53632L4.64625 12.9713C4.4425 13.1587 4.27985 13.3863 4.16861 13.6398C4.05737 13.8932 3.99996 14.167 4 14.4438V26.0001C4 26.5305 4.21071 27.0392 4.58579 27.4143C4.96086 27.7894 5.46957 28.0001 6 28.0001H12C12.5304 28.0001 13.0391 27.7894 13.4142 27.4143C13.7893 27.0392 14 26.5305 14 26.0001V20.0001H18V26.0001C18 26.5305 18.2107 27.0392 18.5858 27.4143C18.9609 27.7894 19.4696 28.0001 20 28.0001H26C26.5304 28.0001 27.0391 27.7894 27.4142 27.4143C27.7893 27.0392 28 26.5305 28 26.0001V14.4438C28 14.167 27.9426 13.8932 27.8314 13.6398C27.7201 13.3863 27.5575 13.1587 27.3538 12.9713ZM26 26.0001H20V20.0001C20 19.4696 19.7893 18.9609 19.4142 18.5859C19.0391 18.2108 18.5304 18.0001 18 18.0001H14C13.4696 18.0001 12.9609 18.2108 12.5858 18.5859C12.2107 18.9609 12 19.4696 12 20.0001V26.0001H6V14.4438L6.01375 14.4313L16 5.00007L25.9875 14.4288L26.0012 14.4413L26 26.0001Z";
        } else if (label === 'Vendor') {
          iconPathD = "M2.8 4.66667V3.73333C2.58431 3.73346 2.37533 3.80829 2.20858 3.94509C2.04183 4.0819 1.92761 4.27223 1.88533 4.48373L2.8 4.66667ZM25.2 4.66667L26.1147 4.48373C26.0724 4.27223 25.9582 4.0819 25.7914 3.94509C25.6247 3.80829 25.4157 3.73346 25.2 3.73333V4.66667ZM27.0667 14V14.9333C27.2047 14.9333 27.341 14.9026 27.4657 14.8434C27.5905 14.7843 27.7005 14.6983 27.788 14.5915C27.8755 14.4848 27.9382 14.3599 27.9717 14.226C28.0051 14.0921 28.0084 13.9524 27.9813 13.8171L27.0667 14ZM0.933333 14L0.0186667 13.8171C-0.00838759 13.9524 -0.00508288 14.0921 0.0283427 14.226C0.0617683 14.3599 0.124483 14.4848 0.211967 14.5915C0.299452 14.6983 0.409529 14.7843 0.534268 14.8434C0.659007 14.9026 0.795302 14.9333 0.933333 14.9333V14ZM6.53333 19.6H5.6V20.5333H6.53333V19.6ZM21.4667 19.6V20.5333H22.4V19.6H21.4667ZM0 28H28V26.1333H0V28ZM1.86667 14V27.0667H3.73333V14H1.86667ZM24.2667 14V27.0667H26.1333V14H24.2667ZM2.8 5.6H25.2V3.73333H2.8V5.6ZM24.2853 4.8496L26.152 14.1829L27.9813 13.8171L26.1147 4.48373L24.2853 4.8496ZM27.0667 13.0667H0.933333V14.9333H27.0667V13.0667ZM1.848 14.1829L3.71467 4.8496L1.88533 4.48373L0.0186667 13.8171L1.848 14.1829ZM1.86667 1.86667H26.1333V0H1.86667V1.86667ZM5.6 14V19.6H7.46667V14H5.6ZM6.53333 20.5333H21.4667V18.6667H6.53333V20.5333ZM22.4 19.6V14H20.5333V19.6H22.4Z";
          [w, h] = ["29", "29"];
        } else if (label === 'MyOrder') {
          iconPathD = "M10.0208 24.6667C9.17292 24.6667 8.44679 24.3645 7.84246 23.7602C7.23812 23.1558 6.93647 22.4302 6.9375 21.5833V16.9583H11.5625V13.4896C10.6632 13.4382 9.8086 13.2388 8.99871 12.8914C8.18882 12.544 7.45036 12.024 6.78333 11.3313V9.63542H5.01042L0 4.625C0.925 3.44306 2.0684 2.60799 3.43021 2.11979C4.79201 1.6316 6.16667 1.3875 7.55417 1.3875C8.24792 1.3875 8.92265 1.43889 9.57837 1.54167C10.2341 1.64444 10.8955 1.83715 11.5625 2.11979V0H30.0625V20.0417C30.0625 21.3264 29.6128 22.4184 28.7135 23.3177C27.8142 24.217 26.7222 24.6667 25.4375 24.6667H10.0208ZM14.6458 16.9583H23.8958V20.0417C23.8958 20.4785 24.0438 20.8449 24.3398 21.1409C24.6358 21.4369 25.0017 21.5844 25.4375 21.5833C25.8743 21.5833 26.2407 21.4353 26.5367 21.1393C26.8327 20.8433 26.9802 20.4774 26.9792 20.0417V3.08333H14.6458V4.00833L23.8958 13.2583V15.4167H21.7375L17.3438 11.0229L17.0354 11.3313C16.6757 11.691 16.2964 12.0122 15.8977 12.2948C15.4989 12.5774 15.0816 12.7958 14.6458 12.95V16.9583ZM6.32083 6.55208H9.86667V9.86667C10.175 10.0722 10.4962 10.2135 10.8302 10.2906C11.1642 10.3677 11.5111 10.4062 11.8708 10.4062C12.4618 10.4062 12.9952 10.3163 13.4711 10.1365C13.9469 9.9566 14.4156 9.63542 14.8771 9.17292L15.1854 8.86458L13.0271 6.70625C12.2819 5.96111 11.4469 5.402 10.5219 5.02892C9.59687 4.65583 8.60764 4.46981 7.55417 4.47083C7.04028 4.47083 6.55208 4.50937 6.08958 4.58646C5.62708 4.66354 5.16458 4.77917 4.70208 4.93333L6.32083 6.55208ZM20.8125 20.0417H10.0208V21.5833H21.0437C20.9667 21.3521 20.9086 21.108 20.8695 20.851C20.8305 20.5941 20.8115 20.3243 20.8125 20.0417Z";
          [w, h] = ["31", "25"];
        } else if (label === 'Profile') {
          iconPathD = "M15 5C16.3261 5 17.5979 5.52678 18.5355 6.46447C19.4732 7.40215 20 8.67392 20 10C20 11.3261 19.4732 12.5979 18.5355 13.5355C17.5979 14.4732 16.3261 15 15 15C13.6739 15 12.4021 14.4732 11.4645 13.5355C10.5268 12.5979 10 11.3261 10 10C10 8.67392 10.5268 7.40215 11.4645 6.46447C12.4021 5.52678 13.6739 5 15 5ZM15 7.5C14.337 7.5 13.7011 7.76339 13.2322 8.23223C12.7634 8.70107 12.5 9.33696 12.5 10C12.5 10.663 12.7634 11.2989 13.2322 11.7678C13.7011 12.2366 14.337 12.5 15 12.5C15.663 12.5 16.2989 12.2366 16.7678 11.7678C17.2366 11.2989 17.5 10.663 17.5 10C17.5 9.33696 17.2366 8.70107 16.7678 8.23223C16.2989 7.76339 15.663 7.5 15 7.5ZM15 16.25C18.3375 16.25 25 17.9125 25 21.25V25H5V21.25C5 17.9125 11.6625 16.25 15 16.25ZM15 18.625C11.2875 18.625 7.375 20.45 7.375 21.25V22.625H22.625V21.25C22.625 20.45 18.7125 18.625 15 18.625Z";
          [w, h] = ["30", "30"];
        };
        const isFocused = state.index === idx;
        const onPress = () => {
          const event = navigation.emit({
            type: 'tabPress',
            target: route.key,
            canPreventDefault: true,
          });
          if (!isFocused && !event.defaultPrevented) {
            navigation.navigate(route.name, { merge: true });
          }
        };
        const onLongPress = () => {
          navigation.emit({
            type: 'tabLongPress',
            target: route.key,
          });
        };
        return (
          <TouchableOpacity
            accessibilityRole="button"
            accessibilityState={isFocused ? { selected: true } : {}}
            accessibilityLabel={options.tabBarAccessibilityLabel}
            onPress={onPress}
            onLongPress={onLongPress}
            style={styles.tabButton}
            key={route.name}
          >
            <Svg
              height={h}
              width={w}
              viewBox={`0 0 ${w} ${h}`}
              strokeWidth={1}
            >
              <Path
                fill="black"
                d={iconPathD}
              />
            </Svg>
            <View style={[styles.tabLine, isFocused && styles.tabActive]} />
          </TouchableOpacity>
        );
      })}
    </View>
  );
};

export default TabBar;

const styles = StyleSheet.create({
  tabBg: {
    flexDirection: "row",
    alignItems: "flex-end",
    justifyContent: "space-between",
    backgroundColor: "white",
    borderTopRightRadius: 30,
    borderTopLeftRadius: 30,
    paddingHorizontal: 30,
    paddingTop: 20
  },
  tabButton: {
    alignItems: 'center',
    justifyContent: 'center',
    height: 30,
    gap: 2,
    width: 40
  },
  tabIcon: {
    width: 32,
    height: 32
  },
  tabLine: {
    backgroundColor: "transparent",
    borderRadius: 2,
    color: "transparent",
    fontSize: 14,
    fontFamily: fonts.I_400,
    height: 5,
    width: 24
  },
  tabActive: {
    backgroundColor: "#4CAF50"
  }
});